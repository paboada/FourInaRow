package com.sample
import javax.swing.JOptionPane;
 
////// REGLAS PARA IMPRESIÓN
rule "Imprimir"
	when
		Celda (i == 0, j == 0, $v1: valor)
		Celda (i == 0, j == 1, $v2: valor)
		Celda (i == 0, j == 2, $v3: valor)
		Celda (i == 0, j == 3, $v4: valor)
		Celda (i == 0, j == 4, $v5: valor)
		Celda (i == 0, j == 5, $v6: valor)
		Celda (i == 0, j == 6, $v7: valor)
		Celda (i == 1, j == 0, $v8: valor)
		Celda (i == 1, j == 1, $v9: valor)
		Celda (i == 1, j == 2, $v10: valor)
		Celda (i == 1, j == 3, $v11: valor)
		Celda (i == 1, j == 4, $v12: valor)
		Celda (i == 1, j == 5, $v13: valor)
		Celda (i == 1, j == 6, $v14: valor)
		Celda (i == 2, j == 0, $v15: valor)
		Celda (i == 2, j == 1, $v16: valor)
		Celda (i == 2, j == 2, $v17: valor)
		Celda (i == 2, j == 3, $v18: valor)
		Celda (i == 2, j == 4, $v19: valor)
		Celda (i == 2, j == 5, $v20: valor)
		Celda (i == 2, j == 6, $v21: valor)
		Celda (i == 3, j == 0, $v22: valor)
		Celda (i == 3, j == 1, $v23: valor)
		Celda (i == 3, j == 2, $v24: valor)
		Celda (i == 3, j == 3, $v25: valor)
		Celda (i == 3, j == 4, $v26: valor)
		Celda (i == 3, j == 5, $v27: valor)
		Celda (i == 3, j == 6, $v28: valor)
		Celda (i == 4, j == 0, $v29: valor)
		Celda (i == 4, j == 1, $v30: valor)
		Celda (i == 4, j == 2, $v31: valor)
		Celda (i == 4, j == 3, $v32: valor)
		Celda (i == 4, j == 4, $v33: valor)
		Celda (i == 4, j == 5, $v34: valor)
		Celda (i == 4, j == 6, $v35: valor)
		Celda (i == 5, j == 0, $v36: valor)
		Celda (i == 5, j == 1, $v37: valor)
		Celda (i == 5, j == 2, $v38: valor)
		Celda (i == 5, j == 3, $v39: valor)
		Celda (i == 5, j == 4, $v40: valor)
		Celda (i == 5, j == 5, $v41: valor)
		Celda (i == 5, j == 6, $v42: valor)
		
				
	then
        System.out.println($v1 +  " " + $v2 + " " + $v3 +  " " + $v4 + " " + $v5 +  " " + $v6 + " " + $v7);		
        System.out.println($v8 +  " " + $v9 + " " + $v10 +  " " + $v11 + " " + $v12 +  " " + $v13 + " " + $v14);		
        System.out.println($v15 +  " " + $v16 + " " + $v17 +  " " + $v18 + " " + $v19 +  " " + $v20 + " " + $v21);
        System.out.println($v22 +  " " + $v23 + " " + $v24 +  " " + $v25 + " " + $v26 +  " " + $v27 + " " + $v28);
        System.out.println($v29 +  " " + $v30 + " " + $v31 +  " " + $v32 + " " + $v33 +  " " + $v34 + " " + $v35);
        System.out.println($v36 +  " " + $v37 + " " + $v38 +  " " + $v39 + " " + $v40 +  " " + $v41 + " " + $v42);
        		
end

rule "Hay turno y es el mio y ganar vertical"
	salience 8
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($col : j, valor == Celda.OES)
		c2 : Celda (c2 != c1, $col == j, $col2 : j, valor == Celda.OES)
		c3 : Celda (c3 != c1, c3 != c2, $col == j, $col3 : j, valor == Celda.NADA)
	then
        System.out.println( "Ganando con triqui vertical en " + c3.toString ());
        modify (c3) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end   

////// REGLAS PARA CAPTURAR LA JUGADA DEL CONTRINCANTE
rule "Hay turno y es el suyo"
	when
		t : Turno (turno == Turno.SU_TURNO)
		//c1 : Celda ($f : i, $val : valor, $col1 : j, valor != Celda.NADA)
	then
        System.out.println( "Es su turno" );
        try
        {
        	// modificando para mostrar el número de filas y columnas permitidos
        	//String filStr = JOptionPane.showInputDialog("Fila [0..5]");
    		String colStr = JOptionPane.showInputDialog("Columna [0..6]");
    		//if (filStr == null && colStr == null)
			if (colStr == null)
	   		{
    			System.out.println ("Partida terminada por el usuario");
		        t.setTurno (Turno.TERMINAR);
        		update (t);
    		}
    		else
    		{
	    		//int f = Integer.parseInt (filStr);
	    		int f = 0;
				int c = Integer.parseInt (colStr);
				//if (f >= 0 && f < 3 && c >= 0 && c < 3)
				if (c >= 0 && c < 7)
				{
					Celda celda = new Celda(f,c);
        			Jugada jugada =  new Jugada(f, c);
        			System.out.println(jugada.getFila()+ " " + jugada.getCol() + " esta es la jugada");
        			
        			insert (jugada);
        			
				}
				else
				{
		      		JOptionPane.showMessageDialog (null, "Jugada inválida", "ERROR", JOptionPane.ERROR_MESSAGE);	
        			update (t);
        		}
    		}
        }
        catch (Exception e)
        {
        	JOptionPane.showMessageDialog (null, "Error", "ERROR", JOptionPane.ERROR_MESSAGE);
       		update (t);
        }	
end        
	
rule "Jugada contrincante inválida"
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f, j == $c, valor != Celda.NADA)
	then
        System.out.println( "Celda (" + $f + ", " + $c + ") está ocupada");
		modify (jugada) {setAnalizada (true)};
		update (t);
end




rule "Jugada contrincante válida"
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f, j == $c, valor == Celda.NADA)
	then
        System.out.println( "Jugada del contrincante en  (" + $f + ", " + $c + ")");
        modify (c) {setValor (Celda.EQUIS)};
		modify (jugada) {setAnalizada (true)};
        modify (t) {setTurno (Turno.MI_TURNO)};
end

rule "Hay turno y es el mio y hay espacio desocupado"
	salience 2
	when
		t : Turno (turno == Turno.MI_TURNO)
		c : Celda (valor == Celda.NADA)
	then
        System.out.println("Juego en una celda desocupada: " + c.toString());
        modify (c) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end        
