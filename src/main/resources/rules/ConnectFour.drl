package com.sample
import javax.swing.JOptionPane;
 
 
global Integer fondo; 
 
////// REGLAS PARA IMPRESIÓN
rule "Imprimir"
	when
		Celda (i == 0, j == 0, $v1: valor)
		Celda (i == 0, j == 1, $v2: valor)
		Celda (i == 0, j == 2, $v3: valor)
		Celda (i == 0, j == 3, $v4: valor)
		Celda (i == 0, j == 4, $v5: valor)
		Celda (i == 0, j == 5, $v6: valor)
		Celda (i == 0, j == 6, $v7: valor)
		Celda (i == 1, j == 0, $v8: valor)
		Celda (i == 1, j == 1, $v9: valor)
		Celda (i == 1, j == 2, $v10: valor)
		Celda (i == 1, j == 3, $v11: valor)
		Celda (i == 1, j == 4, $v12: valor)
		Celda (i == 1, j == 5, $v13: valor)
		Celda (i == 1, j == 6, $v14: valor)
		Celda (i == 2, j == 0, $v15: valor)
		Celda (i == 2, j == 1, $v16: valor)
		Celda (i == 2, j == 2, $v17: valor)
		Celda (i == 2, j == 3, $v18: valor)
		Celda (i == 2, j == 4, $v19: valor)
		Celda (i == 2, j == 5, $v20: valor)
		Celda (i == 2, j == 6, $v21: valor)
		Celda (i == 3, j == 0, $v22: valor)
		Celda (i == 3, j == 1, $v23: valor)
		Celda (i == 3, j == 2, $v24: valor)
		Celda (i == 3, j == 3, $v25: valor)
		Celda (i == 3, j == 4, $v26: valor)
		Celda (i == 3, j == 5, $v27: valor)
		Celda (i == 3, j == 6, $v28: valor)
		Celda (i == 4, j == 0, $v29: valor)
		Celda (i == 4, j == 1, $v30: valor)
		Celda (i == 4, j == 2, $v31: valor)
		Celda (i == 4, j == 3, $v32: valor)
		Celda (i == 4, j == 4, $v33: valor)
		Celda (i == 4, j == 5, $v34: valor)
		Celda (i == 4, j == 6, $v35: valor)
		Celda (i == 5, j == 0, $v36: valor)
		Celda (i == 5, j == 1, $v37: valor)
		Celda (i == 5, j == 2, $v38: valor)
		Celda (i == 5, j == 3, $v39: valor)
		Celda (i == 5, j == 4, $v40: valor)
		Celda (i == 5, j == 5, $v41: valor)
		Celda (i == 5, j == 6, $v42: valor)
		
				
	then
		System.out.println("  "+ 0 +  " " + 1 + " " + 2 +  " " + 3 + " " + 4 +  " " + 5 + " " + 6);		
        System.out.println(0 +  " " + $v1 +  " " + $v2 + " " + $v3 +  " " + $v4 + " " + $v5 +  " " + $v6 + " " + $v7);		
        System.out.println(1 +  " " + $v8 +  " " + $v9 + " " + $v10 +  " " + $v11 + " " + $v12 +  " " + $v13 + " " + $v14);		
        System.out.println(2 +  " " + $v15 +  " " + $v16 + " " + $v17 +  " " + $v18 + " " + $v19 +  " " + $v20 + " " + $v21);
        System.out.println(3 +  " " + $v22 +  " " + $v23 + " " + $v24 +  " " + $v25 + " " + $v26 +  " " + $v27 + " " + $v28);
        System.out.println(4 +  " " + $v29 +  " " + $v30 + " " + $v31 +  " " + $v32 + " " + $v33 +  " " + $v34 + " " + $v35);
        System.out.println(5 +  " " + $v36 +  " " + $v37 + " " + $v38 +  " " + $v39 + " " + $v40 +  " " + $v41 + " " + $v42);
        		
end

 

////// REGLAS PARA CAPTURAR LA JUGADA DEL CONTRINCANTE
rule "Hay turno y es el suyo"
	when
		t : Turno (turno == Turno.SU_TURNO)
		
	then
        System.out.println( "Es su turno" );
        try
        {
        	// modificando para mostrar el número de filas y columnas permitidos
        	//String filStr = JOptionPane.showInputDialog("Fila [0..5]");
    		String colStr = JOptionPane.showInputDialog("Columna [0..6]");
    		//if (filStr == null && colStr == null)
			if (colStr == null)
	   		{
    			System.out.println ("Partida terminada por el usuario");
		        t.setTurno (Turno.TERMINAR);
        		update (t);
    		}
    		else
    		{
	    		int f = 5;
				int c = Integer.parseInt (colStr);
								
				if (c >= 0 && c < 7)
				{
					//Celda celda = new Celda(f,c);
        			Jugada jugada =  new Jugada(f, c);
        			System.out.println(jugada.getFila()+ " " + jugada.getCol() + " esta es la jugada");
        			
        			insert (jugada);
        		}
				else
				{
		      		JOptionPane.showMessageDialog (null, "Jugada inválida", "ERROR", JOptionPane.ERROR_MESSAGE);	
        			update (t);
        		}
    		}
        }
        catch (Exception e)
        {
        	JOptionPane.showMessageDialog (null, "Error", "ERROR", JOptionPane.ERROR_MESSAGE);
       		update (t);
        }	
end        
	
rule "Jugada contrincante inválida"
	salience 2
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f, j == $c, valor != Celda.NADA)
	then
        System.out.println( "Celda (" + $f + ", " + $c + ") está ocupada");
		modify (jugada) {setAnalizada (true)};
		update (t);
end


rule "Jugada contrincante válida en fondo"
	salience 10
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f, j == $c, valor == Celda.NADA)
				 
	then
        System.out.println( "Jugada del contrincante en  (" + $f + ", " + $c + ")");
               
        modify (c) {setValor (Celda.EQUIS)};
		modify (jugada) {setAnalizada (true)};
		//System.out.println( " Esta es la celda" + " " + c.getValor()+" "+c.getI()+c.getJ()+"bb"+$f+$c);
		//$f=$f+1;
		//System.out.println(" minuevof"+$f);
				
        modify (t) {setTurno (Turno.MI_TURNO)};
end


rule "Jugada contrincante válida 2"
	salience 9
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f-1, j == $c, valor == Celda.NADA)
				 
	then
        System.out.println( "Jugada del contrincante en  (" + $f + ", " + $c + ")");
        
        
        modify (c) {setValor (Celda.EQUIS)};
		modify (jugada) {setAnalizada (true)};
		modify (t) {setTurno (Turno.MI_TURNO)};
end


rule "Jugada contrincante válida 3"
	salience 8
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f-2, j == $c, valor == Celda.NADA)
		
	then
        System.out.println( "Jugada del contrincante en  (" + $f + ", " + $c + ")");
              
        modify (c) {setValor (Celda.EQUIS)};
		modify (jugada) {setAnalizada (true)};
		modify (t) {setTurno (Turno.MI_TURNO)};
end

rule "Jugada contrincante válida 4"
	salience 7
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f-3, j == $c, valor == Celda.NADA)
				 
	then
        System.out.println( "Jugada del contrincante en  (" + $f + ", " + $c + ")");
        
        
        modify (c) {setValor (Celda.EQUIS)};
		modify (jugada) {setAnalizada (true)};
	    modify (t) {setTurno (Turno.MI_TURNO)};
end

rule "Jugada contrincante válida 5"
	salience 6
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f-4, j == $c, valor == Celda.NADA)
	 
	then
        System.out.println( "Jugada del contrincante en  (" + $f + ", " + $c + ")");
              
        modify (c) {setValor (Celda.EQUIS)};
		modify (jugada) {setAnalizada (true)};
        modify (t) {setTurno (Turno.MI_TURNO)};
end

rule "Jugada contrincante válida 6"
	salience 5
	when
		t : Turno (turno == Turno.SU_TURNO)
		jugada : Jugada ($f : fila, $c : col, analizada == false)
		c : Celda (i == $f-5, j == $c, valor == Celda.NADA)
				 
	then
        System.out.println( "Jugada del contrincante en  (" + $f + ", " + $c + ")");
        modify (c) {setValor (Celda.EQUIS)};
		modify (jugada) {setAnalizada (true)};
		modify (t) {setTurno (Turno.MI_TURNO)};
end

rule "Primera Jugada en mi turno"
	salience 10
	when
		t : Turno (turno == Turno.MI_TURNO)
		c : Celda ($f : 5, $c : 3, valor == Celda.NADA)
		c1: Celda(i == $f, j==$c, valor == Celda.NADA)
		
	then
        System.out.println("Juego en el centro: " + c.toString());
        System.out.println(" PRUEBA " + $f);
        System.out.println("inicio jugada");
        modify (c1) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end 

rule "Hay turno y es el mio y hay espacio desocupado"
	salience 9
	when
		t : Turno (turno == Turno.MI_TURNO)
		c : Celda ($f : i, $c : j, valor == Celda.NADA)
		c1: Celda(i == $f+5, j==$c, valor == Celda.NADA)
		
	then
        System.out.println("Juego en una celda desocupada: " + c.toString());
        System.out.println(" PRUEBA " + $f);
        System.out.println("regla 1");
       
        modify (c1) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end        

rule "Hay turno y es el mio y hay espacio desocupado 2"
	salience 8
	when
		t : Turno (turno == Turno.MI_TURNO)
		c : Celda ($f : i, $c : j, valor == Celda.NADA)
		c1: Celda(i == $f+4, j==$c, valor == Celda.NADA)
		
	then
        System.out.println("Juego en una celda desocupada: " + c.toString());
        System.out.println(" PRUEBA " + $f);
        System.out.println("regla 2");

       
        modify (c1) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end

rule "Hay turno y es el mio y hay espacio desocupado 3"
	salience 7
	when
		t : Turno (turno == Turno.MI_TURNO)
		c : Celda ($f : i, $c : j, valor == Celda.NADA)
		c1: Celda(i == $f+3, j==$c, valor == Celda.NADA)
		
	then
        System.out.println("Juego en una celda desocupada: " + c.toString());
        System.out.println(" PRUEBA " + $f);
        System.out.println("regla 3");
       
        modify (c1) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end

rule "Hay turno y es el mio y hay espacio desocupado 4"
	salience 6
	when
		t : Turno (turno == Turno.MI_TURNO)
		c : Celda ($f : i, $c : j, valor == Celda.NADA)
		c1: Celda(i == $f+2, j==$c, valor == Celda.NADA)
		
	then
        System.out.println("Juego en una celda desocupada: " + c.toString());
        System.out.println(" PRUEBA " + $f);
        System.out.println("regla 4");
       
        modify (c1) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end

rule "Hay turno y es el mio y hay espacio desocupado 5"
	salience 5
	when
		t : Turno (turno == Turno.MI_TURNO)
		c : Celda ($f : i, $c : j, valor == Celda.NADA)
		c1: Celda(i == $f+1, j==$c, valor == Celda.NADA)
		
	then
        System.out.println("Juego en una celda desocupada: " + c.toString());
        System.out.println(" PRUEBA " + $f);
        System.out.println("regla 5");
       
        modify (c1) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end

rule "Hay turno y es el mio y hay espacio desocupado 6"
	salience 4
	when
		t : Turno (turno == Turno.MI_TURNO)
		c : Celda ($f : i, $c : j, valor == Celda.NADA)
		c1: Celda(i == $f, j==$c, valor == Celda.NADA)
		
	then
        System.out.println("Juego en una celda desocupada: " + c.toString());
        System.out.println(" PRUEBA " + $f);
        System.out.println("regla 6");
       
        modify (c1) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end



 /// REGLAS PARA ESTABLECER LA TERMINACIÖN DEL JUEGO

rule "Termina el juego por ganar en vertical"
	salience 20
	when
		t : Turno (turno != Turno.TERMINAR)
		c1 : Celda ($c : j, $val : valor, $fil1 : i && valor != Celda.NADA)
		c2 : Celda ($c == j, $val == valor, $fil2 : i, $fil2 == $fil1 + 1)
		c3 : Celda ($c == j, $val == valor, $fil3 : i, $fil3 == $fil2 + 1)
		c4 : Celda ($c == j, $val == valor, $fil4 : i, $fil4 == $fil3 + 1)
	then
        System.out.println( "Ganó el " + $val + " en la column " + $c);
        modify (t) {setTurno (Turno.TERMINAR)};
end

rule "Termina el juego por ganar en horizontal"
	salience 20
	when
		t : Turno (turno != Turno.TERMINAR)
		c1 : Celda ($f : i, $val : valor, $col1 : j, valor != Celda.NADA)
		c2 : Celda ($f == i, $val == valor, $col2 : j, $col2 == $col1 + 1)
		c3 : Celda ($f == i, $val == valor, $col3 : j, $col3 == $col2 + 1)
		c4 : Celda ($f == i, $val == valor, $col4 : j, $col4 == $col3 + 1)
		
	then
        System.out.println( "Ganó el " + $val + " en la fila " + $f);
        modify (t) {setTurno (Turno.TERMINAR)};
end	


rule "Termina el juego por ganar en diagonal"
	salience 20
	when
		t : Turno (turno != Turno.TERMINAR)
		c1 : Celda ($f1 : i, $c1 : j, $d11 : (i - j), $d12 : (i + j), $val : valor, valor != Celda.NADA)
		c2 : Celda ($f2 : i, $c2 : j, $d21 : (i - j), $d22 : (i + j), $val == valor)
		c3 : Celda ($f3 : i, $c3 : j, $d31 : (i - j), $d32 : (i + j), $val == valor)
		c4 : Celda ($f4 : i, $c4 : j, $d41 : (i - j), $d42 : (i + j), $val == valor)
		
	eval (($f1 != $f2 && $f1 != $f3 && $f1 != $f4 && $f2 != $f3 && $f2 != $f4 && $f3 != $f4 )	// No están en la misma fila
		  && ($c1 != $c2 && $c1 != $c3 && $c1 != $c4 && $c2 != $c3 && $c2 != $c4 && $c3 != $c4)	// No están en la misma columna
		  && ($d11 == $d21 && $d11 == $d31 && $d11 == $d41 || $d12 == $d22 && $d22 == $d32 && $d32 == $d42)
		  &&($c2 == $c1+1 && $c3 == $c1+2 && $c4 == $c1+3 || $c2 == $c1-1 && $c3 == $c1-2 && $c4 == $c1-3) ) // Están en la misma diagonal
	then
        System.out.println( "Ganó el " + $val + " en una diagonal");
        System.out.println("$f1: " + $f1+" "+ "$c1:" +$c1+" " );
        System.out.println("$f2: " + $f2+" "+ "$c2:" +$c2+" " );
        System.out.println("$f3: " + $f3+" "+ "$c3:" +$c3+" " );
        System.out.println("$f4: " + $f4+" "+ "$c4:" +$c4+" " );
        System.out.println("$d11: " + $d11+" "+ "$d21:" +$d21+" " );
        System.out.println("$d31: " + $d31+" "+ "$d41:" +$d41+" " );
        System.out.println("$d12: " + $d12+" "+ "$d22:" +$d22+" " );
        System.out.println("$d32: " + $d32+" "+ "$d42:" +$d42+" " );
        modify (t) {setTurno (Turno.TERMINAR)};
end 

rule "Empate"
	salience 21
	
	when
		t : Turno (turno != Turno.TERMINAR)
		not Celda (valor == Celda.NADA)
	then
        System.out.println( "Empate");
        modify (t) {setTurno (Turno.TERMINAR)};
end	



//BLOQUEOS - ESTRATEGIA DE JUEGO  

rule "Hay turno y es el mío y bloquear al otro horizontal cuando tiene dos consecutivas"
	salience 14
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($col1 : j,$f : i, valor == Celda.NADA)
		c2 : Celda (c2 != c1, $f == i, $col2 :j, valor == Celda.EQUIS)
		c3 : Celda (c3 != c1, c3 != c2, $f == i, $col3 : j, valor == Celda.EQUIS)
		c4 : Celda (c4 != c1, c4!=c2, c4 != c3,$f == i, $col4 : j, valor == Celda.NADA)
		c5 : Celda ($f5 : i, $c5 : j, valor != Celda.NADA)
		
		//c4 : Celda ($col==j+1,$col4:j+1,c4 != c1, c4!=c2, c4 != c3,$f == i, valor == Celda.NADA)
						
		// Son consecutivas
	eval ($col2 == $col1+1 && $col3 == $col1+2 && $col4 == $col1+3 && $c5 == $col4 && $f5 == $f+1 
		 || $col2 == $col1-1 && $col3 == $col1-2 && $col4 == $col1-3 && $c5 == $col4 && $f5 == $f+1
		 || $col2 == $col1+1 && $col3 == $col1+2 && $col4 == $col1+3 && $f == 5
		 || $col2 == $col1-1 && $col3 == $col1-2 && $col4 == $col1-3 && $f == 5 )	
						
	then
		//System.out.println("HHHHHHH AAAAAA");
		System.out.println( c1.toString());
		System.out.println( c2.toString());
		System.out.println( c3.toString());
        System.out.println( "Bloqueando jugada horizontal en  " + c4.toString ());
        modify (c4) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end 




rule "Hay turno y es el mío y bloquear al otro vertical"
	salience 15
	when
		t : Turno (turno == Turno.MI_TURNO)
		//c1 : Celda ($col : j, $f:i, valor == Celda.EQUIS)
		//c2 : Celda (c2 != c1, $col == j, $col2 : j, valor == Celda.EQUIS)
		//c3 : Celda (c3 != c1, c3 != c2, $col == j, $col3 : j, valor == Celda.EQUIS)
		//c4 : Celda (c4 != c1, c4 != c2, c4 != c3, $col == j, $col4 : j, $f == i+1, valor == Celda.NADA)
		//c4 : Celda ($f==i+1,$f4:i+1,c4 != c1, c4 != c3,c4!=c2, $col == j, $col4 : j, valor == Celda.NADA)
		c1 : Celda ($col1 : j, $fil1 : i, valor == Celda.EQUIS)
		c2 : Celda (c2 != c1, $col1 == j, $col2 : j, $fil2 : i, valor == Celda.EQUIS)
		c3 : Celda (c3 != c1, c3 != c2, $col1 == j, $col3 : j, $fil3 : i, valor == Celda.EQUIS)
		c4 : Celda (c4 != c1, c4 != c2, c4 != c3, $col1 == j, $col4 : j, $fil4 : i, valor == Celda.NADA)
		// Son consecutivas
	eval ($fil2 == $fil1+1 && $fil3 == $fil1+2 && $fil4 == $fil1+3 
		  || $fil2 == $fil1-1 && $fil3 == $fil1-2 && $fil4 == $fil1-3) 
		
		
	then
		System.out.println("AAAAAAA");
		System.out.println( c1.toString());
		System.out.println( c2.toString());
		System.out.println(  c3.toString());
        System.out.println( "Bloqueando jugada ganadora vertical en " + c4.toString());
        modify (c4) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end 


rule "Hay turno y es el mío y bloquear al otro horizontal"
	salience 15
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($col1 : j,$f : i, valor == Celda.EQUIS)
		c2 : Celda (c2 != c1, $f == i, $col2 :j, valor == Celda.EQUIS)
		c3 : Celda (c3 != c1, c3 != c2, $f == i, $col3 : j, valor == Celda.EQUIS)
		c4 : Celda (c4 != c1, c4!=c2, c4 != c3,$f == i, $col4 : j, valor == Celda.NADA)
		c5 : Celda ($f5 : i, $c5 : j, valor != Celda.NADA)
		//c4 : Celda ($col==j+1,$col4:j+1,c4 != c1, c4!=c2, c4 != c3,$f == i, valor == Celda.NADA)
						
		// Son consecutivas
	eval ($col2 == $col1+1 && $col3 == $col1+2 && $col4 == $col1+3 && $c5 == $col4 && $f5 == $f+1 
		 || $col2 == $col1-1 && $col3 == $col1-2 && $col4 == $col1-3 && $c5 == $col4 && $f5 == $f+1
		 || $col2 == $col1+1 && $col3 == $col1+2 && $col4 == $col1+3 && $f == 5
		 || $col2 == $col1-1 && $col3 == $col1-2 && $col4 == $col1-3 && $f == 5 )	
						
	then
		//System.out.println("HHHHHHH AAAAAA");
		System.out.println( c1.toString());
		System.out.println( c2.toString());
		System.out.println( c3.toString());
        System.out.println( "Bloqueando jugada ganadora horizontal en  " + c4.toString ());
        modify (c4) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end    

rule "Hay turno y es el mío y bloquear al otro diagonal"
	salience 15
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($f1 : i, $c1 : j, $d11 : (i - j), $d12 : (i + j), valor == Celda.EQUIS)
		c2 : Celda ($f2 : i, $c2 : j, $d21 : (i - j), $d22 : (i + j), valor == Celda.EQUIS)
		c3 : Celda ($f3 : i, $c3 : j, $d31 : (i - j), $d32 : (i + j), valor == Celda.EQUIS)
		//c31: Celda ($c3== j+3, $f3==i+2, $f31 : i-2, $c31 : j+3, $v3:valor)
		c4 : Celda ($f4 : i, $c4 : j, $d41 : (i - j), $d42 : (i + j), valor == Celda.NADA)
		c5 : Celda ($f5 : i, $c5 : j, valor != Celda.NADA)
				
		eval (($f1 != $f2 && $f1 != $f3 && $f1 != $f4 && $f2 != $f3 && $f2 != $f4 && $f3 != $f4)	// No están en la misma fila
			&& ($c1 != $c2 && $c1 != $c3 && $c1 != $c4 && $c2 != $c3 && $c2 != $c4 && $c3 != $c4)	// No están en la misma columna
			&& ($d11 == $d21 && $d11 == $d31 && $d11 == $d41 || $d12 == $d22 && $d22 == $d32 && $d32 == $d42) // Están en la misma diagonal
			&& ($c2 == $c1+1 && $c3 == $c1+2 && $c4 == $c1+3 || $c2 == $c1-1 && $c3 == $c1-2 && $c4 == $c1-3)
			&& ($c5 == $c4 && $f5 == $f4 + 1 || $c5 == $c4 && $f5 == $f4 + 1))
			//&& ($v3 !=Celda.NADA)) 
	then
		System.out.println("HHHHHHH AAAAAA");
		System.out.println( c1.toString());
		System.out.println( c2.toString());
		System.out.println( c3.toString());
		System.out.println( c4.toString());
		System.out.println( c5.toString());

        System.out.println( "Bloqueando jugada ganadora diagonal en " + c4.toString ());
        modify (c4) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end


//ESTRATEGIA, REGLAS PARA GANAR APENAS SEA POSIBLE

rule "Hay turno y es el mio y ganar vertical"
	salience 16
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($col1 : j, $fil1 : i, valor == Celda.OES)
		c2 : Celda (c2 != c1, $col1 == j, $col2 : j, $fil2 : i, valor == Celda.OES)
		c3 : Celda (c3 != c1, c3 != c2, $col1 == j, $col3 : j, $fil3 : i, valor == Celda.OES)
		c4 : Celda (c4 != c1, c4 != c2, c4 != c3, $col1 == j, $col4 : j, $fil4 : i, valor == Celda.NADA)
		// Son consecutivas
	eval ($fil2 == $fil1+1 && $fil3 == $fil1+2 && $fil4 == $fil1+3 
		  || $fil2 == $fil1-1 && $fil3 == $fil1-2 && $fil4 == $fil1-3) 
	then
        System.out.println( "Haciendo cuatro en línea vertical en " + c4.toString ());
        modify (c4) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end  


rule "Hay turno y es el mio y ganar horizontal"
	salience 16
	when
		t : Turno (turno == Turno.MI_TURNO)
			
		c1 : Celda ($col1 : j,$f : i, valor == Celda.OES)
		c2 : Celda (c2 != c1, $f == i, $col2 :j, valor == Celda.OES)
		c3 : Celda (c3 != c1, c3 != c2, $f == i, $col3 : j, valor == Celda.OES)
		c4 : Celda (c4 != c1, c4!=c2, c4 != c3,$f == i, $col4 : j, valor == Celda.NADA)
		c5 : Celda ($f5 : i, $c5 : j, valor != Celda.NADA)
					
		// Son consecutivas
	eval ($col2 == $col1+1 && $col3 == $col1+2 && $col4 == $col1+3 && $c5 == $col4 && $f5 == $f+1 
		 || $col2 == $col1-1 && $col3 == $col1-2 && $col4 == $col1-3 && $c5 == $col4 && $f5 == $f+1
		 || $col2 == $col1+1 && $col3 == $col1+2 && $col4 == $col1+3 && $f == 5
		 || $col2 == $col1-1 && $col3 == $col1-2 && $col4 == $col1-3 && $f == 5 )
		 //&& ($c5 == $col4 && $f5 == $f+1)) 
	
	then
		System.out.println( "c5 " + c5.toString ());
        System.out.println( "Haciendo cuatro en línea horizontal en " + c4.toString ());
        modify (c4) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end 



rule "Hay turno y es el mio y ganar con la diagonal"
	salience 16
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($f1 : i, $c1 : j, $d11 : (i - j), $d12 : (i + j), valor == Celda.OES)
		c2 : Celda ($f2 : i, $c2 : j, $d21 : (i - j), $d22 : (i + j), valor == Celda.OES)
		c3 : Celda ($f3 : i, $c3 : j, $d31 : (i - j), $d32 : (i + j), valor == Celda.OES)
		//c31: Celda ($c3== j+3, $f3==i+2, $f31 : i-2, $c31 : j+3, $v3:valor)
		c4 : Celda ($f4 : i, $c4 : j, $d41 : (i - j), $d42 : (i + j), valor == Celda.NADA)
		c5 : Celda ($f5 : i, $c5 : j, valor != Celda.NADA)
				
		eval (($f1 != $f2 && $f1 != $f3 && $f1 != $f4 && $f2 != $f3 && $f2 != $f4 && $f3 != $f4)	// No están en la misma fila
			&& ($c1 != $c2 && $c1 != $c3 && $c1 != $c4 && $c2 != $c3 && $c2 != $c4 && $c3 != $c4)	// No están en la misma columna
			&& ($d11 == $d21 && $d11 == $d31 && $d11 == $d41 || $d12 == $d22 && $d22 == $d32 && $d32 == $d42) // Están en la misma diagonal
			&& ($c2 == $c1+1 && $c3 == $c1+2 && $c4 == $c1+3 || $c2 == $c1-1 && $c3 == $c1-2 && $c4 == $c1-3)
			&& ($c5 == $c4 && $f5 == $f4 + 1 || $c5 == $c4 && $f5 == $f4 + 1))
			//&& ($v3 !=Celda.NADA)) 
	then
        System.out.println( "Cuatro en línea en diagonal en " + c4.toString ());
        modify (c4) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end    


// REGLAS PARA ACUMULAR FICHAS DE MANERA CONSECUTIVA

rule "Hay turno y es el mío y pongo ficha encima de la del contrincante"
	salience 12
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($col1 : j, $fil1 : i, valor == Celda.EQUIS)
		c2 : Celda (c2 != c1, $col1 == j, $col2 : j, $fil2 : i, valor == Celda.NADA)
		
		// Son consecutivas
	eval ($fil2 == $fil1+1 || $fil2 == $fil1-1) 
	then
        System.out.println( "Poniendo ficha encima del contrincante en " + c2.toString ());
        modify (c2) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end 

rule "Hay turno y es el mío y poner vertical consecutiva"
	salience 12
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($col1 : j, $fil1 : i, valor == Celda.OES)
		c2 : Celda (c2 != c1, $col1 == j, $col2 : j, $fil2 : i, valor == Celda.NADA)
		
		// Son consecutivas
	eval ($fil2 == $fil1+1 || $fil2 == $fil1-1) 
	then
        System.out.println( "Poniendo consecutiva vertical en " + c2.toString ());
        modify (c2) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end 

rule "Hay turno y es el mío y poner horizontal consecutiva"
	salience 12
	when
		t : Turno (turno == Turno.MI_TURNO)
			
		c1 : Celda ($col1 : j,$f : i, valor == Celda.OES)
		c2 : Celda (c2 != c1, $f == i, $col2 :j, valor == Celda.NADA)
		c3 : Celda ($f3 : i, $c3 : j, valor != Celda.NADA)
		//c3 : Celda (c3 != c1, c3 != c2, $f == i, $col3 : j, valor == Celda.OES)
		//c4 : Celda (c4 != c1, c4!=c2, c4 != c3,$f == i, $col4 : j, valor == Celda.NADA)
					
		// Son consecutivas
	eval ($col2 == $col1+1 && $c3 == $col2 && $f3 == $f+1 
		  || $col2 == $col1-1 && $c3 == $col2 && $f3 == $f+1
		  || $col2 == $col1+1 && $f == 5
		  || $col2 == $col1-1 && $f == 5 ) 
	
	then
        System.out.println( "Poniendo consecutiva horizontal en " + c2.toString ());
        modify (c2) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end 

rule "Hay turno y es el mío y poner diagonal consecutiva"
	salience 12
	when
		t : Turno (turno == Turno.MI_TURNO)
		c1 : Celda ($f1 : i, $c1 : j, $d11 : (i - j), $d12 : (i + j), valor == Celda.OES)
		c2 : Celda ($f2 : i, $c2 : j, $d21 : (i - j), $d22 : (i + j), valor == Celda.NADA)
		//c3 : Celda ($f3 : i, $c3 : j, $d31 : (i - j), $d32 : (i + j), valor == Celda.OES)
		//c31: Celda ($c3== j+3, $f3==i+2, $f31 : i-2, $c31 : j+3, $v3:valor)
		//c4 : Celda ($f4 : i, $c4 : j, $d41 : (i - j), $d42 : (i + j), valor == Celda.NADA)
		c3 : Celda ($f3 : i, $c3 : j, valor != Celda.NADA)
				
		eval (($f1 != $f2)	// No están en la misma fila
			&& ($c1 != $c2 )	// No están en la misma columna
			&& ($d11 == $d21 || $d12 == $d22) // Están en la misma diagonal
			&& ($c2 == $c1+1 || $c2 == $c1-1)
			&& ($c3 == $c1 - 1 && $f3 == $f1 || $c3 == $c1 + 1 && $f3 == $f1))
			//&& ($v3 !=Celda.NADA)) 
	then
        System.out.println( "Poniendo conscutivo en diagonal en " + c2.toString ());
        modify (c2) {setValor (Celda.OES)};
        modify (t) {setTurno (Turno.SU_TURNO)};
end





